{"version":3,"sources":["SummerTechTheme.js","SignupLogin.js","TransactionView.js","App.js","AuthForm.js","serviceWorker.js","Faucet.js","index.js"],"names":["theme","global","colors","background","brand","control","dark","light","focus","neutral-1","neutral-2","neutral-3","neutral-4","undefined","accent-1","accent-2","accent-3","dark-1","dark-2","button","primary","color","text","SignupLogin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cookies","Cookies","get","fetch","method","headers","Content-Type","body","JSON","stringify","password","then","response","json","set","address","setState","username","onClickLogin","bind","assertThisInitialized","state","history","push","react_default","a","createElement","Grommet","full","Box","justify","align","fill","basis","Heading","responsive","margin","top","bottom","size","Paragraph","textAlign","Grid","Button","label","href","onClick","event","Component","withRouter","TransactionView","type","react_media","query","matches","rows","columns","SubtractCircle","timestamp","right","gap","amount","recipient","message","shortTimestamp","left","AddCircle","sender","App","errorAlert","toast","error","infoAlert","info","successAlert","success","fetchBalance","onSubmitTx","handleScan","handleScanError","makeRedeemableAccount","showRedeemable","recipient_input","React","createRef","printTriggerRef","qrRef","showSendModal","showAddressModal","showQRReader","alreadyPoppedRedeemable","balance","transactions","sendAddressValue","shouldMakeRedeemable","redeemableAccount","lastPayload","showRedeemableModal","showRedeemModal","lastTxHash","alreadyReceivedHashes","hasInitiallyLoaded","hasAlreadyScanned","hasCookie","_this2","includes","remove","window","setInterval","oldTxHash","parse","fetchLastTxHash","fetchTransactions","cookieBanner","_this3","src_SignupLogin_0","userAgent","navigator","toLowerCase","indexOf","react_cookie_banner_lib_default","onAccept","cookie","react_toastify","direction","main_default","seed","scale","className","overflow","vertical","height","renderTransactions","alignContent","alignSelf","flex","tag","showRedeem","_this4","_this5","hash","_this6","_this7","Layer","onEsc","onClickOutside","modal","Close","cursor","react_qr_reader_lib_default","facingMode","onScan","onError","showViewFinder","_this8","lib_default","value","react_copy_to_clipboard_lib","pad","_this9","Form","onSubmit","FormField","name","ref","placeholder","required","TextInput","onChange","target","burn_rate","_this10","redeemableUsername","Math","random","toString","substring","redeemablePassword","sha3_512","startingSize","startingMediaSize","isStart","_this11","id","getQuery","printContents","concat","node","document","getElementById","domtoimage","toJpeg","bgcolor","dataUrl","print","printable","imageStyle","catch","console","scan","_this12","split","length","redeemableBalance","fetchBalancePure","parseFloat","err","_this13","preventDefault","formData","payload","replace","_ref","asyncToGenerator","regenerator_default","mark","_callee","i","newAlreadyReceivedHashes","wrap","_context","prev","next","_this14","toConsumableArray","stop","_x","apply","arguments","x","transactionViews","atob","max","innerWidth","TransactionView_TransactionView","key","time","AuthForm","password_text_input","alert","refs","onSubmitCreate","onSubmitAuth","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","Faucet","timeUntilClaim","nextClaimAmount","getTimeUntilClaim","getClaimAmount","makeClaim","getClaimLabelText","store","createStore","combineReducers","routing","routerReducer","es","react_router_dom","react_router","exact","path","component","render","src_AuthForm","src_Faucet","ReactDOM","URL","process","origin","addEventListener","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.488ba626.chunk.js","sourcesContent":["export const theme = {\n  global: {\n    colors: {\n      background: \"#ffffff\",\n      brand: \"#03A9F4\",\n      control: {\n        dark: \"#0288D1\",\n        light: \"#03A9F4\",\n      },\n      focus: \"#cceeff\",\n      \"neutral-1\": \"#757575\",\n      \"neutral-2\": \"#005584\",\n      \"neutral-3\": \"#005584\",\n      \"neutral-4\": undefined,\n      \"accent-1\": \"#FFC107\",\n      \"accent-2\": \"#FFC107\",\n      \"accent-3\": \"#03A9F4\",\n      \"dark-1\": \"#000001\",\n      \"dark-2\": \"#646569\",\n    },\n    button: {\n      primary: {\n        color: \"#ffffff\",\n        text: \"#ffffff\",\n      },\n      colors: {\n        text: \"#ffffff\"\n      }\n    },\n  },\n};","import React, { Component } from 'react';\nimport './SignupLogin.css';\nimport { Grommet, Heading, Button, Paragraph, Box, Grid } from 'grommet';\nimport { theme } from './SummerTechTheme'; // Import SummerTech theme\nimport Cookies from 'universal-cookie'; // Import cookies\nimport { withRouter } from 'react-router-dom'; // Import router\n\nclass SignupLogin extends Component {\n  // construct a new App component instance\n  constructor(props) {\n    super(props); // Super props\n\n    const cookies = new Cookies(); // Initialize cookies\n  \n    if (cookies.get(\"username\") !== undefined && cookies.get(\"username\") !== \"\" && cookies.get(\"username\") !== \"not-signed-in\") { // Check already signed in\n      fetch(\"/api/accounts/\"+cookies.get(\"username\")+\"/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          password: cookies.get(\"password\"),\n        })\n      }).then((response) => response.json())\n      .then(response => {\n        cookies.set('address', response.address); // Set address\n  \n        this.setState({\n          username: cookies.get('username') || 'not-signed-in', // Set username cookie\n          password: cookies.get('password') || 'not-signed-in', // Set password\n          address: cookies.get('address') || 'not-signed-in', // Set address\n        }) // Set state\n      })\n    }\n\n    this.onClickLogin = this.onClickLogin.bind(this); // Bind this\n  }\n\n  render() {\n    if (this.state !== undefined && this.state !== null && this.state.username !== \"\" && this.state.username !== \"not-signed-in\" && this.state.address !== \"\" && this.address !== \"not-signed-in\") { // Check signed in\n      this.props.history.push(\"/\"); // Go to app\n    }\n\n    return (\n      <Grommet theme={ theme } full={ true }>\n        <Box justify=\"center\" align=\"center\" fill={ true } basis=\"large\">\n          <Heading responsive={ true } margin={{ top: \"none\", bottom: \"none\" }} size=\"large\">\n            SummerCash\n          </Heading>\n\n          <Paragraph responsive={ true } size=\"xxlarge\" textAlign=\"center\">\n            Save, store, and send SummerCash.\n          </Paragraph>\n          \n          <Grid>\n            <Button responsive={ true } size=\"xlarge\" primary color=\"accent-2\" label=\"Create New Wallet\" href=\"signup\"/>\n            <Button responsive={ true } size=\"xlarge\" margin=\"small\" label=\"Sign In\" onClick={ this.onClickLogin }/>\n          </Grid>\n        </Box>\n      </Grommet>\n    );\n  }\n\n  // onClickLogin handles the login event.\n  onClickLogin (event) {\n    this.props.history.push(\"/login\"); // Go to login\n  }\n}\n\nexport default withRouter(SignupLogin); // Force use router","import React, { Component } from \"react\";\nimport { theme } from './SummerTechTheme'; // Import SummerTech theme\nimport { Grommet, Paragraph, Grid } from 'grommet';\nimport { SubtractCircle, AddCircle } from 'grommet-icons'; // Import grommet icons\nimport Media from \"react-media\";\n\nexport default class TransactionView extends Component {\n  render() {\n    if (this.props.type === \"send\") { // Check is send\n      return (\n        <Grommet theme={ theme }>\n          <Media query=\"(min-width:626px)\">\n            { matches => \n              matches ? (\n                <Grid rows={[\"xxsmall\"]} columns={[ \"xxsmall\", \"16%\", \"medium\", \"medium\" ]} align=\"center\" margin={{ top: this.props.margin }}>\n                  <SubtractCircle/>\n                  <Paragraph responsive={ true } textAlign=\"start\">\n                    { this.props.timestamp }\n                  </Paragraph>\n                  <Paragraph responsive={ true } textAlign=\"start\" margin={{ right: this.props.gap }}>\n                    Sent { this.props.amount } SMC to { this.props.recipient }\n                  </Paragraph>\n                  <Paragraph responsive={ true } textAlign=\"start\">\n                    { this.props.message }\n                  </Paragraph>\n                </Grid>\n              ) : (\n                <Grid rows={[\"xxsmall\"]} columns={[ \"xxsmall\", \"10%\", \"medium\", \"small\" ]} align=\"center\" fill=\"horizontal\" margin={{ top: this.props.margin }}>\n                  <SubtractCircle/>\n                  <Paragraph responsive={ true } textAlign=\"start\">\n                    { this.props.shortTimestamp }\n                  </Paragraph>\n                  <Media query=\"(min-width:432px)\">\n                    { matches =>\n                      matches ? (\n                        <Paragraph responsive={ true } textAlign=\"center\">\n                          { this.props.amount } SMC to { this.props.recipient }\n                        </Paragraph>\n                      ) : (\n                        <Paragraph responsive={ true } textAlign=\"center\" margin={{ left: \"-5%\" }}>\n                          { this.props.amount } SMC to { this.props.recipient }\n                        </Paragraph>\n                      )\n                    }\n                  </Media>\n                  <Media query=\"(min-width:530px)\">\n                    <Paragraph responsive={ true } textAlign=\"start\" margin={{ left: \"-20%\" }}>\n                      { this.props.message }\n                    </Paragraph>\n                  </Media>\n                </Grid>\n              )\n            }\n          </Media>\n        </Grommet>\n      );\n    } else {\n      return (\n        <Grommet theme={ theme }>\n          <Media query=\"(min-width:626px)\">\n            { matches => \n              matches ? (\n                <Grid rows={[\"xxsmall\"]} columns={[ \"xxsmall\", \"16%\", \"medium\", \"medium\" ]} align=\"center\" margin={{ top: this.props.margin }}>\n                  <AddCircle/>\n                  <Paragraph responsive={ true } textAlign=\"start\">\n                    { this.props.timestamp }\n                  </Paragraph>\n                  <Paragraph responsive={ true } textAlign=\"start\" margin={{ right: this.props.gap }}>\n                    Received { this.props.amount } SMC from { this.props.sender }\n                  </Paragraph>\n                  <Paragraph responsive={ true } textAlign=\"start\">\n                    { this.props.message }\n                  </Paragraph>\n                </Grid>\n              ) : (\n                <Grid rows={[\"xxsmall\"]} columns={[ \"xxsmall\", \"10%\", \"medium\", \"small\" ]} align=\"center\" fill=\"horizontal\" margin={{ top: this.props.margin }}>\n                  <AddCircle/>\n                  <Paragraph responsive={ true } textAlign=\"start\">\n                    { this.props.shortTimestamp }\n                  </Paragraph>\n                  <Media query=\"(min-width:432px)\">\n                    { matches =>\n                      matches ? (\n                        <Paragraph responsive={ true } textAlign=\"center\">\n                          { this.props.amount } SMC from { this.props.sender }\n                        </Paragraph>\n                      ) : (\n                        <Paragraph responsive={ true } textAlign=\"center\" margin={{ left: \"-15%\" }}>\n                          { this.props.amount } SMC from { this.props.sender }\n                        </Paragraph>\n                      )\n                    }\n                  </Media>\n                  <Media query=\"(min-width:530px)\">\n                    <Paragraph responsive={ true } textAlign=\"start\" margin={{ left: \"-20%\" }}>\n                      { this.props.message }\n                    </Paragraph>\n                  </Media>\n                </Grid>\n              )\n            }\n          </Media>\n        </Grommet>\n      );\n    }\n  }\n}\n","/* eslint-disable no-loop-func */\nimport React, { Component } from 'react';\nimport './App.css';\nimport Cookies from 'universal-cookie';\nimport SignupLogin from './SignupLogin'; // Import signup login page\nimport { theme } from './SummerTechTheme'; // Import SummerTech theme\nimport { Grommet, Heading, Paragraph, Box, Button, Layer, Form, FormField, TextInput } from 'grommet';\nimport Blockies from 'react-blockies'; // Import identicons\nimport { ToastContainer, toast } from 'react-toastify'; // Import toast\nimport TransactionView from './TransactionView'; // Import tx view\nimport { withRouter } from 'react-router-dom'; // Import router\nimport QRCode from 'qrcode.react';\nimport { Close } from 'grommet-icons'; // Import icons\nimport {CopyToClipboard} from 'react-copy-to-clipboard'; // Import clipboard\nimport QrReader from 'react-qr-reader'; // Import qr code reader\nimport { sha3_512 } from 'js-sha3'; // Import sha3\nimport domtoimage from 'dom-to-image'; // Import print\nimport print from 'print-js'; // Import print\nimport Media from 'react-media';\nimport CookieBanner from 'react-cookie-banner'; // Import cookie banner\n\nclass App extends Component {\n  errorAlert = (message) => toast.error(message); // Alert\n  infoAlert = (message) => toast.info(message); // Alert\n  successAlert = (message) => toast.success(message); // Alert\n\n  // construct a new App component instance\n  constructor(props) {\n    super(props); // Super props\n\n    const cookies = new Cookies(); // Initialize cookies\n\n    this.fetchBalance = this.fetchBalance.bind(this); // Bind this\n    this.onSubmitTx = this.onSubmitTx.bind(this); // Bind this\n    this.handleScan = this.handleScan.bind(this); // Bind this\n    this.handleScanError = this.handleScanError.bind(this); // Bind this\n    this.makeRedeemableAccount = this.makeRedeemableAccount.bind(this); // Bind this\n    this.showRedeemable = this.showRedeemable.bind(this); // Bind this\n\n    this.recipient_input = React.createRef(); // Create ref\n    this.printTriggerRef = React.createRef(); // Create ref\n    this.qrRef = React.createRef(); // Create ref\n\n    if (cookies.get(\"username\") !== \"\" && cookies.get(\"username\") !== \"not-signed-in\" && cookies.get(\"username\") !== undefined) { // Check signed in\n      this.fetchBalance(cookies.get('username')); // Fetch balance\n    }\n  \n    this.state = {\n      username: cookies.get('username') || 'not-signed-in', // Get username cookie\n      address: cookies.get('address') || 'not-signed-in', // Get address cookie\n      password: cookies.get('password') || 'not-signed-in', // Get password cookie\n      showSendModal: false, // Set show send modal\n      showAddressModal: false, // Set show address modal\n      showQRReader: false, // Set show qr modal\n      alreadyPoppedRedeemable: false, // Set already popped\n      balance: 0, // Set balance\n      transactions: [], // Set transactions\n      sendAddressValue: \"\", // Set send addr\n      shouldMakeRedeemable: false, // Set should make redeemable\n      redeemableAccount: null, // Set redeemable account\n      lastPayload: \"\", // Set last payload\n      showRedeemableModal: false, // Set show redeemable modal\n      showRedeemModal: false, // Set show redeem modal\n      lastTxHash: \"\", // Set last tx hash\n      alreadyReceivedHashes: [], // Set received hashes\n      hasInitiallyLoaded: false, // Set has already loaded\n      hasAlreadyScanned: false, // Set has already scanned\n      hasCookie: cookies.get(\"has-cookie-accept\"), // Set has cookie\n    } // Set state\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies(); // Initialize cookies\n\n    if (cookies.get(\"username\") !== \"\" && cookies.get(\"username\") !== \"not-signed-in\" && cookies.get(\"username\") !== undefined) { // Check signed in\n      fetch(\"/api/accounts/\"+cookies.get(\"username\")+\"/transactions\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((response) => response.json())\n      .then(response => {\n        if (response.error) { // Check for errors\n          if (response.error.includes(\"no account exists with the given username\")) { // Check shouldn't be logged in\n            cookies.remove(\"username\"); // Remove account details\n            cookies.remove(\"password\"); // Remove account details\n            cookies.remove(\"address\"); // Remove account details\n\n            this.props.history.push(\"/\"); // Go to home\n          }\n\n          this.errorAlert(response.error); // Alert\n        } else if (!response.transactions) { // Check txs null\n          if (!this.state.alreadyPoppedRedeemable) { // Check has not already popped\n            this.infoAlert(\"Need some SummerCash? Look out for redeemable airdrop QR codes to earn your first coins.\"); // Alert\n\n            this.setState({ alreadyPoppedRedeemable: true }); // Set state\n          }\n        } else {\n          this.setState({ transactions: response.transactions }); // Set state txs\n        }\n\n        window.setInterval(() => {\n          var oldTxHash = JSON.parse(JSON.stringify(this.state.lastTxHash)); // Get old tx hash\n\n          this.fetchLastTxHash(this.state.username)\n          .then(() => {\n            if (this.state.lastTxHash !== oldTxHash) { // Check did change\n              this.fetchTransactions(); // Fetch transactions\n            }\n          }) // Refresh last tx hash\n        }, 500); // Sync every 500 milliseconds\n      });\n    }\n  }\n\n  // render\n  render() {\n    if (this.state.username === 'not-signed-in' || this.state.username === '') { // Check not signed in\n      return <SignupLogin /> // Render signup/login page\n    }\n\n    let cookieBanner; // Init buffer\n\n    var userAgent = navigator.userAgent.toLowerCase(); // Get user agent\n\n    if (!this.state.hasCookie && userAgent.indexOf(' electron/') === -1) { // Has not accepted cookie\n      cookieBanner = <CookieBanner\n        message=\"We uses cookies to ensure you get the best experience on our website.\"\n        onAccept={() => {}}\n        cookie=\"has-cookie-accept\"\n      />; // Set cookie banner\n    }\n\n    return (\n      <Grommet theme={ theme } full>\n        <ToastContainer/>\n        { cookieBanner }\n        <Box margin={{ top: \"large\", left: \"large\", right: \"large\" }} align=\"center\" direction=\"row\">\n          <Box margin={{ right: \"medium\" }}>\n            <Blockies seed={ this.state.address } size={ 5 } scale={ 15 } className=\"blocky\"/>\n          </Box>\n          <Box margin={{ left: \"small\" }}>\n            <Heading responsive={ true } size=\"medium\" margin=\"none\">\n              { this.state.username }\n            </Heading>\n            <Media query=\"(min-width:770px)\">\n              <Paragraph responsive={ true } size=\"large\" margin={{ top: \"xsmall\", bottom: \"none\" }}>\n                { this.state.address }\n              </Paragraph>\n            </Media>\n            <Media query=\"(max-width:779px)\">\n              <Media query=\"(min-width: 440px)\">\n                <Paragraph responsive={ true } size=\"small\" margin={{ top: \"xsmall\", bottom: \"none\" }}>\n                  { this.state.address }\n                </Paragraph>\n              </Media>\n            </Media>\n            <Paragraph responsive={ true } size=\"medium\" margin={{ top: \"xsmall\" }}>\n              Balance: { this.state.balance } SMC\n            </Paragraph>\n          </Box>\n        </Box>\n        <Heading responsive={ true } size=\"medium\" margin={{ left: \"large\", top: \"medium\", bottom: \"xsmall\"}}>\n          Transactions\n        </Heading>\n        <Box overflow={{ \"vertical\": \"scroll\" }} margin={{ left: \"large\" }} height=\"50%\">\n          { this.renderTransactions() }\n        </Box>\n        <Media query=\"(min-width:605px)\">\n          { matches =>\n            matches ? (\n              <Box direction=\"row\" margin={{ left: \"large\" }} align=\"baseline\" alignContent=\"start\" alignSelf=\"start\">\n                <Button primary label=\"Send\" onClick={ () => this.setState({ showSendModal: true }) } margin={{ top: \"small\" }} color=\"accent-2\" size=\"xlarge\"/>\n                <Button label=\"Receive\" onClick={ () => this.setState({ showAddressModal: true }) } margin={{ top: \"small\", left: \"small\" }} size=\"xlarge\"/>\n                <Button label=\"Redeem\" onClick={ () => this.setState({ showRedeemModal: true }) } margin={{ top: \"small\", left: \"small\" }} size=\"xlarge\"/>\n              </Box>\n            ) : (\n              <Box flex={ false } direction=\"column\" fill=\"vertical\" responsive={ true } margin={{ left: \"medium\", right: \"medium\" }} tag=\"footer\">\n                <Button primary label=\"Send\" onClick={ () => this.setState({ showSendModal: true }) } margin={{ top: \"small\" }} color=\"accent-2\"/>\n                <Button label=\"Receive\" onClick={ () => this.setState({ showAddressModal: true }) } margin={{ top: \"small\" }}/>\n                <Button label=\"Redeem\" onClick={ () => this.setState({ showRedeemModal: true }) } margin={{ top: \"small\" }}/>\n              </Box>\n            )\n          }\n        </Media>\n        { this.state.showAddressModal ? this.showAddressModal() : null }\n        { this.state.showSendModal ? this.showSendModal() : null }\n        { this.state.showRedeemableModal ? this.showRedeemable(512, 535, true) : null }\n        { this.state.showRedeemModal ? this.showRedeem() : null }\n      </Grommet>\n    );\n  }\n\n  fetchBalancePure(username) {\n    return fetch(\"/api/accounts/\"+username+\"/balance\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((response) => response.json())\n    .then(response => {\n      var balance = 0; // Init balance buffer\n\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Error\n      } else {\n        balance = response.balance; // Set balance\n      }\n\n      return balance; // Return balance\n    });\n  }\n\n  fetchLastTxHash(username) {\n    return fetch(\"/api/accounts/\"+username+\"/lastHash\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((response) => response.json())\n    .then(response => {\n      if (!response.error) {\n        this.setState({ lastTxHash: response.hash }); // Set hash\n      }\n    });\n  }\n\n  fetchBalance(username) {\n    fetch(\"/api/accounts/\"+username+\"/balance\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((response) => response.json())\n    .then(response => {\n      var balance = 0; // Init balance buffer\n\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Error\n      } else {\n        balance = response.balance; // Set balance\n      }\n\n      this.setState({ balance: balance }); // Set state\n    });\n  }\n\n  showRedeem() {\n    return (\n      <Media query=\"(min-width:588px)\">\n        { matches =>\n          matches ? (\n            <Layer\n              onEsc={ () => this.setState({ showRedeemModal: false }) }\n              onClickOutside={ () => this.setState({ showRedeemModal: false }) }\n              modal={ true }\n              responsive={ false }\n            >\n              <Box margin={{ right: \"medium\", top: \"small\", bottom: \"none\" }} alignContent=\"end\" align=\"end\" responsive={ false }>\n                <Close onClick={ () => this.setState({ showRedeemModal: false }) } cursor=\"pointer\"/>\n              </Box>\n              <Box align=\"center\" alignContent=\"center\" direction=\"column\" responsive={ false }>\n                <Heading margin={{ left: \"xlarge\", right: \"xlarge\", top: \"none\" }} responsive={ true }>\n                  Scan a code!\n                </Heading>\n              </Box>\n              <QrReader facingMode=\"environment\" onScan={ this.handleScan } onError={ this.handleScanError }/>\n            </Layer>\n          ) : (\n            <Layer\n              onEsc={ () => this.setState({ showRedeemModal: false }) }\n              onClickOutside={ () => this.setState({ showRedeemModal: false }) }\n              modal={ true }\n              responsive={ true }\n            >\n              <Box alignContent=\"end\" align=\"end\" margin={{ top: \"medium\", right: \"medium\" }} overflow={{ vertical: \"hidden\" }}>\n                <Close color=\"white\" onClick={ () => this.setState({ showRedeemModal: false }) } cursor=\"pointer\" overflow={{ vertical: \"hidden\" }}/>\n              </Box>\n              <QrReader facingMode=\"environment\" onScan={ this.handleScan } onError={ this.handleScanError } showViewFinder={ false } className=\"mobile-qr\"/>\n            </Layer>\n          )\n        }\n      </Media>\n    );\n  }\n\n  showAddressModal() {\n    return (\n      <Media query=\"(min-width:544px)\">\n        { matches =>\n          matches ? (\n            <Layer\n              onEsc={ () => this.setState({ showAddressModal: false }) }\n              onClickOutside={ () => this.setState({ showAddressModal: false }) }\n              modal={ true }\n              responsive={ false }\n            >\n              <Box margin={{ right: \"medium\", top: \"small\", bottom: \"small\" }} alignContent=\"end\" align=\"end\">\n                <Close onClick={ () => this.setState({ showAddressModal: false }) } cursor=\"pointer\"/>\n              </Box>\n              <Box align=\"center\" alignContent=\"center\" direction=\"column\">\n                <QRCode value={ this.state.address } size={ 512 }/>\n                <CopyToClipboard text={ this.state.address }>\n                  <Button>\n                    <Paragraph responsive={ true }>{ this.state.address }</Paragraph>\n                  </Button>\n                </CopyToClipboard>\n              </Box>\n            </Layer>\n          ) : (\n            <Media query=\"(min-width:355px)\">\n              { matches =>\n                matches ? (\n                  <Layer\n                    onEsc={ () => this.setState({ showAddressModal: false }) }\n                    onClickOutside={ () => this.setState({ showAddressModal: false }) }\n                    modal={ true }\n                    responsive={ false }\n                  >\n                    <Box margin={{ right: \"medium\", top: \"medium\", bottom: \"medium\" }} alignContent=\"end\" align=\"end\">\n                      <Close onClick={ () => this.setState({ showAddressModal: false }) } cursor=\"pointer\"/>\n                    </Box>\n                    <Box align=\"center\" alignContent=\"center\" direction=\"column\">\n                      <QRCode value={ this.state.address } size={ 320 }/>\n                      <CopyToClipboard text={ this.state.address }>\n                        <Button>\n                          <Paragraph size=\"small\" responsive={ true }>{ this.state.address }</Paragraph>\n                        </Button>\n                      </CopyToClipboard>\n                    </Box>\n                  </Layer>\n                ) : (\n                  <Layer\n                    onEsc={ () => this.setState({ showAddressModal: false }) }\n                    onClickOutside={ () => this.setState({ showAddressModal: false }) }\n                    modal={ true }\n                    responsive={ false }\n                  >\n                    <Box margin={{ right: \"medium\", top: \"medium\", bottom: \"medium\" }} alignContent=\"end\" align=\"end\">\n                      <Close onClick={ () => this.setState({ showAddressModal: false }) } cursor=\"pointer\"/>\n                    </Box>\n                    <Box align=\"center\" alignContent=\"center\" direction=\"column\" pad={{ bottom: \"xlarge\" }}>\n                      <QRCode value={ this.state.address } size={ 256 }/>\n                    </Box>\n                  </Layer>\n                )\n              }\n            </Media>\n          )\n        }\n      </Media>\n    );\n  }\n\n  showSendModal() {\n    return (\n      <Media query=\"(min-width:427px)\">\n        { matches =>\n          matches ? (\n            <Layer\n              onEsc={ () => this.setState({ showSendModal: false }) }\n              onClickOutside={ () => this.setState({ showSendModal: false }) }\n              modal={ true }\n              responsive={ false }\n            >\n              <Box align=\"center\" alignContent=\"center\" direction=\"column\" pad=\"medium\">\n                <Form onSubmit={ this.onSubmitTx }>\n                  <FormField name=\"amount\" ref={\"amount_input\"} label=\"Amount\" placeholder=\"1.23456\" required={ true } size=\"xxlarge\"/>\n                  <FormField name=\"burn_rate\" ref={\"burn_input\"} label=\"Burn Rate\" placeholder=\"0.123456\" required={ false } size=\"xxlarge\"/>\n                  <FormField name=\"recipient\" label=\"Recipient\" required={ false } size=\"xxlarge\">\n                    <TextInput ref=\"recipient_input\" value={ this.state.sendAddressValue } onChange={ event => this.setState({ sendAddressValue: event.target.value }) } placeholder=\"@username / 0x1234\" size=\"xxlarge\"/>\n                  </FormField>\n                  <FormField name=\"message\" label=\"Message\" placeholder=\"Say something nice!\" required={ false } size=\"xxlarge\"/>\n                  <Media query=\"(min-width: 1066px)\">\n                    { matches =>\n                      matches ? (\n                        <Box align=\"center\" alignContent=\"center\" alignSelf=\"center\" direction=\"row\">\n                          <Button primary type=\"submit\" label=\"Send\" color=\"accent-2\"/>\n                          <Button primary margin={{ left: \"small\" }} type=\"submit\" label=\"Make Redeemable\" onClick={ () => this.setState({ shouldMakeRedeemable: true }) } color=\"accent-2\"/>\n                          <Button ref={ this.recipient_input } margin={{ left: \"small\" }} label=\"Scan QR Code\" onClick={ () => this.setState({ showQRReader: true }) }/>\n                        </Box>\n                      ) : (\n                        <Box align=\"center\" alignContent=\"center\" alignSelf=\"center\" direction=\"row\">\n                          <Button primary type=\"submit\" label=\"Send\" color=\"accent-2\"/>\n                          <Button primary margin={{ left: \"small\" }} type=\"submit\" label=\"Redeemable\" onClick={ () => this.setState({ shouldMakeRedeemable: true }) } color=\"accent-2\"/>\n                          <Button ref={ this.recipient_input } margin={{ left: \"small\" }} label=\"Scan\" onClick={ () => this.setState({ showQRReader: true }) }/>\n                        </Box>\n                      )\n                    }\n                  </Media>\n                </Form>\n              </Box>\n              { this.state.showQRReader ? this.showQRReader() : null }\n            </Layer>\n          ) : (\n            <Layer\n              onEsc={ () => this.setState({ showSendModal: false }) }\n              onClickOutside={ () => this.setState({ showSendModal: false }) }\n              modal={ true }\n              responsive={ true }\n            >\n              <Box align=\"end\" margin={{ right: \"large\", top: \"medium\" }}>\n                <Close onClick={ () => this.setState({ showSendModal: false }) } cursor=\"pointer\"/>\n              </Box>\n              <Box align=\"center\" alignContent=\"center\" direction=\"column\" pad=\"medium\">\n                <Form onSubmit={ this.onSubmitTx }>\n                  <FormField name=\"amount\" ref={\"amount_input\"} label=\"Amount\" placeholder=\"1.23456\" required={ true } size=\"xxlarge\"/>\n                  <FormField name=\"burn_rate\" ref={\"burn_input\"} label=\"Burn Rate\" placeholder=\"0.123456\" required={ false } size=\"xxlarge\"/>\n                  <FormField name=\"recipient\" label=\"Recipient\" required={ false } size=\"xxlarge\">\n                    <TextInput ref=\"recipient_input\" value={ this.state.sendAddressValue } onChange={ event => this.setState({ sendAddressValue: event.target.value }) } placeholder=\"@username / 0x1234\" size=\"xxlarge\"/>\n                  </FormField>\n                  <FormField name=\"message\" label=\"Message\" placeholder=\"Say something nice!\" required={ false } size=\"xxlarge\"/>\n                  <Media query=\"(min-width: 1066px)\">\n                    { matches =>\n                      matches ? (\n                        <Box align=\"center\" alignContent=\"center\" alignSelf=\"center\" direction=\"row\">\n                          <Button primary type=\"submit\" label=\"Send\" color=\"accent-2\"/>\n                          <Button primary margin={{ left: \"small\" }} type=\"submit\" label=\"Make Redeemable\" onClick={ () => this.setState({ shouldMakeRedeemable: true }) } color=\"accent-2\"/>\n                          <Button ref={ this.recipient_input } margin={{ left: \"small\" }} label=\"Scan QR Code\" onClick={ () => this.setState({ showQRReader: true }) }/>\n                        </Box>\n                      ) : (\n                        <Box align=\"center\" alignContent=\"center\" alignSelf=\"center\" direction=\"row\">\n                          <Button primary type=\"submit\" label=\"Send\" color=\"accent-2\"/>\n                          <Button primary margin={{ left: \"small\" }} type=\"submit\" label=\"Redeemable\" onClick={ () => this.setState({ shouldMakeRedeemable: true }) } color=\"accent-2\"/>\n                          <Button ref={ this.recipient_input } margin={{ left: \"small\" }} label=\"Scan\" onClick={ () => this.setState({ showQRReader: true }) }/>\n                        </Box>\n                      )\n                    }\n                  </Media>\n                </Form>\n              </Box>\n              { this.state.showQRReader ? this.showQRReader() : null }\n            </Layer>\n          )\n        }\n      </Media>\n    )\n  }\n\n  makeRedeemableAccount(burn_rate) {\n    this.setState({\n      redeemableAccount: null, // Reset redeemable account\n    });\n\n    var redeemableUsername = this.state.username+\"_\"+Math.random().toString(36).substring(7); // Generate redeemable username\n\n    if (burn_rate !== undefined && burn_rate && burn_rate !== 0) { // Check has burn rate\n      redeemableUsername = this.state.username+\"_\"+Math.random().toString(36).substring(7)+\"_burnrate:\"+burn_rate; // Add burn rate\n    }\n\n    var redeemablePassword = sha3_512(Math.random().toString(36).substring(7)); // Generate redeemable password\n\n    return fetch(\"/api/accounts/\"+redeemableUsername, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password: redeemablePassword, // Set password\n      })\n    }).then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert\n      } else {\n        this.setState({\n          redeemableAccount: {\n            username: redeemableUsername, // Set user\n            password: redeemablePassword, // Set pass\n          } // Set redeemable account\n        }) // Update state\n      }\n    });\n  }\n\n  showQRReader() {\n    return (\n      <QrReader facingMode=\"environment\" onScan={ this.handleScan } onError={ this.handleScanError }/>\n    )\n  }\n\n  showRedeemable(startingSize, startingMediaSize, isStart) {\n    return (\n      <Layer\n        onEsc={ () => this.setState({ showRedeemableModal: false, showSendModal: false, showQRReader: false, sendAddressValue: \"\", shouldMakeRedeemable: false, lastPayload: \"\" }) }\n        onClickOutside={ () => this.setState({ showRedeemableModal: false, showSendModal: false, showQRReader: false, sendAddressValue: \"\", shouldMakeRedeemable: false, lastPayload: \"\" }) }\n        modal={ isStart }\n        responsive={ false }\n      >\n        <Box margin={{ right: \"medium\", top: \"small\", bottom: \"small\" }} alignContent=\"end\" align=\"end\">\n          <Close onClick={ () => this.setState({ showRedeemableModal: false, showSendModal: false, showQRReader: false, sendAddressValue: \"\", shouldMakeRedeemable: false, lastPayload: \"\" }) } cursor=\"pointer\"/>\n        </Box>\n        <div id=\"print-contents\">\n          <Box align=\"center\" alignContent=\"center\" direction=\"column\">\n            <Heading size=\"small\" margin={{ top: \"none\" }}>Scan in SummerCash Wallet</Heading>\n            <Media query={this.getQuery(startingMediaSize)}>\n              { matches =>\n                matches ? (\n                  <QRCode value={ this.state.redeemableAccount.username+\"_\"+this.state.redeemableAccount.password } size={ startingSize }/>\n                ) : (\n                  this.showRedeemable(startingSize - 32, startingMediaSize - 32, false)\n                )\n              }\n            </Media>\n            <Paragraph responsive={ true }>{ this.state.lastPayload }</Paragraph>\n          </Box>\n        </div>\n        <Button primary onClick={ () => this.printContents() } label=\"Print\" margin={{ top: \"none\", bottom: \"small\", left: \"small\", right: \"small\" }} color=\"accent-2\" size=\"xlarge\"/>\n      </Layer>\n    )\n  }\n\n  getQuery(size) {\n    return `(min-width:${size}px)`;\n  }\n\n  printContents() {\n    const node = document.getElementById(\"print-contents\"); // Get node\n\n    domtoimage.toJpeg(node, { bgcolor: \"white\" }) // Generate PNG image\n    .then((dataUrl) => {\n        print({ printable: dataUrl, type: \"image\", imageStyle: \"width:70%; height:70%;transform:rotate(-90deg);margin-top:-5%;margin-left: 10%;\"}); // Print\n    })\n    .catch(function (error) {\n        console.error('oops, something went wrong!', error); // Log error\n    });\n  }\n\n  handleScan (scan) {\n    if (scan && !this.state.hasAlreadyScanned) { // Check scanned\n      this.setState({ hasAlreadyScanned: true }); // Has already scanned\n\n      if (!scan.includes(\"@\") && !scan.includes(\"0x\") && !scan.includes(\"_\")) { // Check is not tx\n        this.errorAlert(\"Invalid QR code (must be @username or 0x1234 address)\"); // Alert\n\n        this.setState({ hasAlreadyScanned: false }); // Reset has already scanned\n      } else if (scan.includes(\"@\") || scan.includes(\"0x\")) {\n        this.setState({ showQRReader: false, sendAddressValue: scan, hasAlreadyScanned: false }); // Hide reader\n      } else if (scan.includes(\"_\")) {\n        var redeemableAccount; // Init buffer\n\n        if (scan.includes(\"_burnrate\")) { // Check has burn rate\n          redeemableAccount = {\n            username: scan.split(\"_burnrate:\")[0]+\"_burnrate:\"+scan.split(\"_burnrate:\")[1].split(\"_\")[0],\n            password: scan.split(\"_\")[scan.split(\"_\").length - 1],\n          } // Set acc\n        } else {\n          redeemableAccount = {\n            username: scan.split(\"_\")[0]+\"_\"+scan.split(\"_\")[1],\n            password: scan.split(\"_\")[2],\n          } // Get acc\n        }\n\n        fetch(\"/api/accounts/\"+redeemableAccount.username+\"/authenticate\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            password: redeemableAccount.password,\n          })\n        }).then((response) => response.json())\n        .then(response => {\n          if (response.error) { // Check for errors\n            this.errorAlert(response.error); // Log error\n          } else {\n            var redeemableBalance = 0; // Init buffer\n\n            this.fetchBalancePure(redeemableAccount.username)\n            .then((balance) => {\n              redeemableBalance = balance; // Set redeemable balance\n\n              if (redeemableAccount.username.includes(\"_burnrate:\")) { // Check has burn rate\n                redeemableBalance = parseFloat(redeemableAccount.username.split(\"_burnrate:\")[1]); // Set redeemable balance\n              }\n\n              fetch(\"/api/transactions/NewTransaction\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                  username: redeemableAccount.username, // Set username\n                  password: redeemableAccount.password, // Set password\n                  recipient: this.state.address, // Set username\n                  amount: redeemableBalance, // Send entire balance\n                })\n              })\n              .then((response) => response.json())\n              .then(response => {\n                if (response.error) { // Check for errors\n                  this.errorAlert(response.error); // Log error\n                } else {\n                  this.fetchBalance(this.state.username); // Check balance\n                  this.fetchTransactions(); // Check txs\n  \n                  this.setState({ showRedeemModal: false, showQRReader: false}); // Close modal\n                }\n              })\n            });\n          }\n\n          this.setState({ hasAlreadyScanned: false }); // Reset has already scanned\n        })\n      }\n    }\n  }\n\n  handleScanError (err) {\n    this.errorAlert(err); // Alert\n  }\n\n  // onSubmitTx handles the tx form submit event.\n  onSubmitTx (event) {\n    event.preventDefault(); // Prevent default\n\n    var formData = JSON.parse(JSON.stringify(event.value)); // Get from data\n\n    if (formData.amount < 0) { // Check negative number\n      this.errorAlert(\"Invalid transaction amount; cannot send negative amounts of SummerCash.\"); // Alert\n\n      return; // Return\n    }\n\n    if (this.state.shouldMakeRedeemable) { // Check is processing elsewhere\n      this.setState({ shouldMakeRedeemable: false, lastPayload: formData.message }); // Reset\n\n      this.makeRedeemableAccount(formData.burn_rate)\n      .then(() => fetch(\"/api/transactions/NewTransaction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: this.state.username, // Set username\n          recipient: this.state.redeemableAccount.username, // Set recipient\n          amount: parseFloat(formData.amount), // Set amount\n          password: this.state.password, // Set password\n          payload: formData.message, // Set message\n        })\n      }))\n      .then((response) => response.json())\n      .then(response => {\n        if (response.error) { // Check for errors\n          this.errorAlert(response.error); // Alert\n  \n          return; // Return\n        }\n\n        this.fetchTransactions(); // Fetch transactions\n\n        this.setState({\n          showSendModal: false,\n          showQRReader: false,\n          sendAddressValue: \"\",\n          showRedeemableModal: true,\n        }); // Set show redeemable modal\n      }); // Make redeemable\n\n      return; // Return\n    }\n\n    if (!formData.recipient) { // Check needs manual set\n      formData.recipient = this.state.sendAddressValue; // Get address\n    }\n\n    formData.recipient = formData.recipient.replace(\"@\", \"\"); // Remove @ symbol\n\n    if (!formData.message) { // Check no message\n      formData.message = \"\"; // Prevent undefined\n    } \n\n    fetch(\"/api/transactions/NewTransaction\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username, // Set username\n        recipient: formData.recipient, // Set recipient\n        amount: parseFloat(formData.amount), // Set amount\n        password: this.state.password, // Set password\n        payload: formData.message,\n      })\n    }).then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert\n      } else {\n        this.successAlert(\"Transaction sent successfully!\"); // Alert success\n      }\n\n      this.fetchTransactions(); // Fetch transactions\n\n      this.setState({\n        showSendModal: false,\n        showQRReader: false,\n        sendAddressValue: \"\",\n      }); // Set state\n    })\n  }\n\n  // fetchTransactions fetches all account txs.\n  async fetchTransactions() {\n    this.fetchBalance(this.state.username); // Fetch balance\n\n    const cookies = new Cookies(); // Initialize cookies\n\n    if (cookies.get(\"username\") !== \"\" && cookies.get(\"username\") !== \"not-signed-in\" && cookies.get(\"username\") !== undefined) { // Check signed in\n      fetch(\"/api/accounts/\"+cookies.get(\"username\")+\"/transactions\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((response) => response.json())\n      .then(async response => {\n        if (response.error) { // Check for errors\n          if (response.error.includes(\"no account exists with the given username\")) { // Check shouldn't be logged in\n            cookies.remove(\"username\"); // Remove account details\n            cookies.remove(\"password\"); // Remove account details\n            cookies.remove(\"address\"); // Remove account details\n  \n            this.props.history.push(\"/\"); // Go to home\n          }\n  \n          this.errorAlert(response.error); // Alert\n        } else if (!response.transactions) { // Check txs null\n          if (!this.state.alreadyPoppedRedeemable) { // Check has not already popped\n            this.infoAlert(\"Need some SummerCash? Look out for redeemable airdrop QR codes to earn your first coins.\"); // Alert\n  \n            this.setState({ alreadyPoppedRedeemable: true }); // Set state\n          }\n        } else {\n          var i; // Declare iterator\n\n          for (i = 0; i < response.transactions.length; i++) { // Iterate through txs\n            if ((!this.state.alreadyReceivedHashes.includes(response.transactions[i].hash)) && (response.transactions[i].recipient === this.state.username || response.transactions[i].recipient === this.state.address)) { // Check new hash\n              if (this.state.hasInitiallyLoaded) { // Check has already loaded\n                this.successAlert(`Received ${response.transactions[i].amount} SummerCash from ${response.transactions[i].sender}!`); // Alert received\n              }\n\n              var newAlreadyReceivedHashes = [...this.state.alreadyReceivedHashes]; // Clone already received\n\n              newAlreadyReceivedHashes.push(response.transactions[i].hash); // Append hash\n\n              this.setState({ alreadyReceivedHashes: newAlreadyReceivedHashes }); // Set already received\n            }\n          }\n\n          if (!this.state.hasInitiallyLoaded) { // Check not already loaded\n            this.setState({ hasInitiallyLoaded: true }); // Set already loaded\n          }\n\n          this.setState({ transactions: response.transactions }); // Set state txs\n        }\n      });\n    }\n  }\n\n  // renderTransactions renders the transaction views.\n  renderTransactions() {\n    var transactionViews = []; // Init tx views\n\n    var x; // Init iterator\n\n    for (x = 0; x < this.state.transactions.length; x++) { // Iterate through txs\n      var type = \"send\"; // Init type buffer\n\n      if (x > 0 && this.state.transactions[x-1].hash === this.state.transactions[x].hash && (this.state.transactions[x].recipient === this.state.address || this.state.transactions[x].recipient === this.state.username) && (this.state.transactions[x].sender === this.state.address || this.state.transactions[x].sender === this.state.username)) { // Check not out of bounds\n        type = \"receive\"; // Set type\n      } else if (this.state.transactions[x].recipient !== this.state.address && this.state.transactions[x].recipient !== this.state.username) { // Check is sending\n        type = \"send\"; // Set send\n      } else if ((this.state.transactions[x].recipient === this.state.address || this.state.transactions[x].recipient === this.state.username) && this.state.transactions[x].sender !== this.state.address && this.state.transactions[x].sender !== this.state.username) { // Check is receiving\n        type = \"receive\"; // Set receive\n      }\n\n      var payload = \"\";\n\n      if (this.state.transactions[x].payload) { // Check has payload\n        payload = atob(this.state.transactions[x].payload); // Decode payload\n      }\n\n      var max = 13; // Get max substring\n\n      if (window.innerWidth < 424) { // Check width less than 424px\n        max = 7; // Set max substring\n      }\n\n      switch (type) {\n        case \"send\":\n          transactionViews.push(\n            <TransactionView\n              key={ x }\n              margin=\"small\"\n              gap=\"small\"\n              type={ type }\n              timestamp={ this.state.transactions[x].time }\n              shortTimestamp={ this.state.transactions[x].time.toString().split(\" \")[0] }\n              recipient={ this.state.transactions[x].recipient.toString().substring(0, max) }\n              amount={ this.state.transactions[x].amount }\n              message={ payload }\n            />\n          ); // Push tx\n\n          break;\n        case \"receive\":\n          transactionViews.push(\n            <TransactionView\n              key={ x }\n              margin=\"small\"\n              gap=\"small\"\n              type={ type }\n              timestamp={ this.state.transactions[x].time }\n              shortTimestamp={ this.state.transactions[x].time.toString().split(\" \")[0] }\n              sender={ this.state.transactions[x].sender.toString().substring(0, max) }\n              amount={ this.state.transactions[x].amount }\n              message={ payload }\n            />\n          ); // Push tx\n\n          break;\n        default:\n          break;\n      }\n    }\n\n    return transactionViews; // Return tx views\n  }\n}\n\nexport default withRouter(App); // Force use router\n","import React, { Component } from 'react'\nimport { theme } from './SummerTechTheme'; // Import SummerTech theme\nimport { Grommet, Box, Form, FormField, TextInput, Button } from 'grommet'; // Import grommet\nimport Cookies from 'universal-cookie'; // Import cookies\nimport { withRouter } from 'react-router-dom'; // Import router\nimport { ToastContainer, toast } from 'react-toastify'; // Import toast\nimport 'react-toastify/dist/ReactToastify.css'; // Import toast styling\n\nclass AuthForm extends Component {\n  errorAlert = (message) => toast.error(message); // Alert\n\n  constructor (props) {\n    super(props); // Super props\n\n    const cookies = new Cookies(); // Initialize cookies\n\n    if (cookies.get(\"username\") !== undefined && cookies.get(\"username\") !== \"\" && cookies.get(\"username\") !== \"not-signed-in\") { // Check already signed in\n      fetch(\"/api/accounts/\"+cookies.get(\"username\")+\"/authenticate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          password: cookies.get(\"password\"),\n        })\n      }).then((response) => response.json())\n      .then(response => {\n        cookies.set('address', response.address); // Set address\n  \n        this.setState({\n          username: cookies.get('username') || 'not-signed-in', // Set username cookie\n          password: cookies.get('password') || 'not-signed-in', // Set password\n          address: cookies.get('address') || 'not-signed-in', // Set address\n        }) // Set state\n\n        this.props.history.push(\"/\"); // Go to app\n      })\n    }\n\n    this.onSubmit = this.onSubmit.bind(this); // Bind onSubmit\n\n    this.password_text_input = React.createRef(); // Create password input ref\n  }\n\n  render() {\n    var size = \"xxlarge\"; // Init size\n\n    if (window.innerWidth < 432) { // Check too small\n      size = \"large\"; // Set size\n    } else if (window.innerWidth < 402) { // Check even smaller\n      size = \"medium\"; // Set size\n    }\n    \n    return (\n      <Grommet theme={ theme } full={ true }>\n        <ToastContainer/>\n        <Box justify=\"center\" align=\"center\" fill=\"vertical\" responsive={ true }>\n          <Form onSubmit={ this.onSubmit }>\n            <FormField name=\"name\" label=\"Name\" required={ true } size={ size } pad={ true }/>\n            <FormField ref=\"password_input\" label=\"Password\" required={ false } value=\"\" pad={ true }>\n              <TextInput ref=\"password_text_input\" type=\"password\" name=\"password\" label=\"Password\" size={ size }/>\n            </FormField>\n            <Button type=\"submit\" onClick={ this.alert } primary label={ this.props.label } margin={{ top: \"small\" }} color=\"accent-2\" size=\"large\"/>\n          </Form>\n        </Box>\n      </Grommet>\n    )\n  }\n\n  // onSubmit submits the auth form.\n  onSubmit (event) {\n    event.preventDefault(); // Prevent default\n\n    var formData = event.value; // Get form data\n    formData.password = this.refs.password_text_input.value; // Get password\n\n    if (this.props.label === \"Sign Up\") { // Check is create account form\n      this.onSubmitCreate(formData); // Submit create\n    } else {\n      this.onSubmitAuth(formData); // Submit auth\n    }\n  }\n\n  // onSubmitCreate is the onSubmit event for a Sign Up form.\n  onSubmitCreate (formData) {\n    fetch(\"/api/accounts/\"+formData.name, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password: formData.password,\n      })\n    }).then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert\n      } else {\n        const cookies = new Cookies(); // Initialize cookies\n\n        cookies.set('username', formData.name); // Set username\n        cookies.set('password', formData.password); // Set password\n        cookies.set('address', response.address); // Set address\n\n        this.setState({\n          username: cookies.get('username') || 'not-signed-in', // Get username cookie\n          password: cookies.get('password') || 'not-signed-in', // Set password\n          address: cookies.get('address') || 'not-signed-in', // Get address\n        }) // Set state\n\n        this.props.history.push(\"/\"); // Go to app\n      }\n    })\n  }\n\n  // onSubmitAuth is the onSubmit event for a Log In form.\n  onSubmitAuth (formData) {\n    fetch(\"/api/accounts/\"+formData.name+\"/authenticate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        password: formData.password,\n      })\n    }).then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert with error\n      } else {\n        const cookies = new Cookies(); // Initialize cookies\n\n        cookies.set('username', formData.name); // Set username\n        cookies.set('password', formData.password); // Set password\n        cookies.set('address', response.address); // Set address\n\n        this.setState({\n          username: cookies.get('username') || 'not-signed-in', // Get username cookie\n          password: cookies.get('password') || 'not-signed-in', // Set password\n          address: cookies.get('address') || 'not-signed-in', // Get address\n        }) // Set state\n\n        this.props.history.push(\"/\"); // Go to app\n      }\n    })\n  }\n}\n\nexport default withRouter(AuthForm); // Force use router","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'; // Import react\nimport './SignupLogin.css'; // Import CSS\nimport { Grommet, Box, Heading, Paragraph, Button } from 'grommet'; // Import grommet\nimport { theme } from './SummerTechTheme'; // Import SummerTech theme\nimport { ToastContainer, toast } from 'react-toastify'; // Import toast notification\nimport Cookies from 'universal-cookie'; // Import cookies\nimport { withRouter } from 'react-router-dom'; // Import router\n\nclass Faucet extends Component {\n  errorAlert = (message) => toast.error(message); // Alert\n  infoAlert = (message) => toast.info(message); // Alert\n  successAlert = (message) => toast.success(message); // Alert\n\n  constructor(props) {\n    super(props); // Super\n\n    const cookies = new Cookies(); // Initialize cookies\n\n    this.state = {\n      timeUntilClaim: \"\", // Set time until claim\n      nextClaimAmount: 0, // Set claim amount\n      username: cookies.get(\"username\"), // Set username\n    }; // Set state\n\n    this.getTimeUntilClaim = this.getTimeUntilClaim.bind(this); // Bind this\n    this.getClaimAmount = this.getClaimAmount.bind(this); // Bind this\n    this.makeClaim = this.makeClaim.bind(this); // Bind this\n  }\n\n  componentDidMount() {\n    const cookies = new Cookies(); // Initialize cookies\n\n    if (cookies.get(\"username\") === undefined || cookies.get(\"username\") === \"not-signed-in\") { // Check not signed in\n      this.props.history.push(\"/\"); // Go to home\n    }\n\n    this.getClaimAmount(); // Get claim amount\n\n    window.setInterval(() => {\n      if (this.state.username !== undefined) { // Check username defined\n        this.getTimeUntilClaim(); // Refresh claim time\n      }\n    }, 1000); // Sync every second\n  }\n\n  render() {\n    return (\n      <Grommet theme={ theme } full>\n        <ToastContainer/>\n        <Box align=\"center\" fill=\"vertical\" justify=\"center\" basis=\"large\">\n          <Heading margin={{ bottom: \"none\" }}>Faucet</Heading>\n          <Heading size=\"xlarge\" margin={{ top: \"small\", bottom: \"none\" }}>{ this.state.timeUntilClaim }</Heading>\n          <Paragraph size=\"large\" margin={{ top: \"small\" }}>Time Until Next Claim</Paragraph>\n          <Button responsive={ true } size=\"xlarge\" primary color=\"accent-2\" label={ this.getClaimLabelText() } onClick={ this.makeClaim }/>\n        </Box>\n      </Grommet>\n    )\n  }\n\n  // getTimeUntilClaim gets the amount of time until the next available claim.\n  async getTimeUntilClaim() {\n    await fetch(\"/api/faucet/\"+this.state.username+\"/NextClaimTime\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert\n\n        return; // Return\n      }\n\n      this.setState({ timeUntilClaim: response.time }); // Set time until claim\n    });\n  }\n\n  // getClaimAmount updates the local state with the latest claim amount.\n  async getClaimAmount() {\n    await fetch(\"/api/faucet/\"+this.state.username+\"/NextClaimAmount\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n    .then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert\n\n        return; // Return\n      }\n\n      this.setState({ nextClaimAmount: response.amount }); // Set claim amount\n    });\n  }\n\n  // makeClaim makes a new claim.\n  async makeClaim() {\n    await fetch(\"/api/faucet/Claim\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: this.state.username, // Set username\n        amount: this.state.nextClaimAmount.toString(), // Set amount\n      }), // Set body\n    })\n    .then((response) => response.json())\n    .then(response => {\n      if (response.error) { // Check for errors\n        this.errorAlert(response.error); // Alert\n\n        return; // Return\n      }\n\n      this.successAlert(`Claimed ${ this.state.nextClaimAmount } SummerCash!`); // Alert successful claim\n\n      this.getClaimAmount(); // Refresh claim amount\n      this.getTimeUntilClaim(); // Refresh time until claim\n    })\n  }\n\n  // getClaimLabel gets the claim label text.\n  getClaimLabelText() {\n    return `Claim ${ this.state.nextClaimAmount } SummerCash`; // Return text\n  }\n}\n\nexport default withRouter(Faucet); // Force use router","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport AuthForm from './AuthForm';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport { routerReducer } from 'react-router-redux';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport Faucet from './Faucet';\n\nconst store = createStore(\n    combineReducers({\n        routing: routerReducer,\n    })\n) // Init store\n\nconst routing = (\n    <Provider store={store}>\n        <Router>\n            <div>\n                <Route exact path=\"/\" component={ App }/>\n                <Route path=\"/signup\" render={ ()=><AuthForm label=\"Sign Up\"/> }/>\n                <Route path=\"/login\" render={ ()=><AuthForm label=\"Log In\"/> }/>\n                <Route path=\"/faucet\" render={ ()=><Faucet/> }/>\n            </div>\n        </Router>\n    </Provider>\n)\n\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}